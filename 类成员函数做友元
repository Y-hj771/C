//成员函数做友元
#include <iostream>
#include <stdlib.h>
#include <string.h>
using namespace std;
class Building;
class Goodgay
{
public:
    Goodgay();
    void visit();
    void visit02();
    Building *building;
};

class Building
{
    friend void Goodgay::visit();
    friend void Goodgay::visit02();
public:
    
    Building();
    string m_Sittingroom;
private:
    string m_Bedroom;;
};

Building::Building()
{
    m_Sittingroom="客厅";
    m_Bedroom="卧室";
}

Goodgay::Goodgay()
{
    building=new Building;
}

void Goodgay::visit()
{
    cout<<"visit正在访问"<<building->m_Sittingroom<<endl;
    cout<<"visit正在访问"<<building->m_Bedroom<<endl;
}

void Goodgay::visit02()
{
    cout<<"visit02正在访问"<<building->m_Sittingroom<<endl;
    cout<<"visit02正在访问"<<building->m_Bedroom<<endl;
}

void test01()
{
    Goodgay g;
    g.visit();
    g.visit02();
}
int main()
{
    test01();
    system("pause");
    return 0;
}
